//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIItemWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIItem), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Awake", Awake);
		L.RegFunction("Btn_OnPressure", Btn_OnPressure);
		L.RegFunction("Btn_OnClick", Btn_OnClick);
		L.RegFunction("Btn_OnMouseOver", Btn_OnMouseOver);
		L.RegFunction("Btn_OnMouseOut", Btn_OnMouseOut);
		L.RegFunction("Btn_OnPress", Btn_OnPress);
		L.RegFunction("Btn_OnRelease", Btn_OnRelease);
		L.RegFunction("Btn_OnDoubleClick", Btn_OnDoubleClick);
		L.RegFunction("OnClickLabelURL", OnClickLabelURL);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ModuleName", get_ModuleName, set_ModuleName);
		L.RegVar("ItemName", get_ItemName, set_ItemName);
		L.RegVar("Index", get_Index, set_Index);
		L.RegVar("List_Sprite", get_List_Sprite, set_List_Sprite);
		L.RegVar("List_Label", get_List_Label, set_List_Label);
		L.RegVar("List_Button", get_List_Button, set_List_Button);
		L.RegVar("List_Slider", get_List_Slider, set_List_Slider);
		L.RegVar("List_Grid", get_List_Grid, set_List_Grid);
		L.RegVar("List_Toggle", get_List_Toggle, set_List_Toggle);
		L.RegVar("List_Element", get_List_Element, set_List_Element);
		L.RegVar("List_Object", get_List_Object, set_List_Object);
		L.RegVar("List_ShaderObject", get_List_ShaderObject, set_List_ShaderObject);
		L.RegVar("List_Texture", get_List_Texture, set_List_Texture);
		L.RegVar("List_Table", get_List_Table, set_List_Table);
		L.RegVar("List_SpriteAnimation", get_List_SpriteAnimation, set_List_SpriteAnimation);
		L.RegVar("List_UIWidget", get_List_UIWidget, set_List_UIWidget);
		L.RegVar("List_Collider", get_List_Collider, set_List_Collider);
		L.RegVar("Data", get_Data, set_Data);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			obj.Awake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnPressure(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnPressure(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnMouseOver(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnMouseOver(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnMouseOut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnMouseOut(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnPress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnPress(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnRelease(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnRelease(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Btn_OnDoubleClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Btn_OnDoubleClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClickLabelURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIItem obj = (UIItem)ToLua.CheckObject<UIItem>(L, 1);
			UILabel arg0 = (UILabel)ToLua.CheckObject(L, 2, typeof(UILabel));
			obj.OnClickLabelURL(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ModuleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			string ret = obj.ModuleName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ModuleName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ItemName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			string ret = obj.ItemName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ItemName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			int ret = obj.Index;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Index on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Sprite(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISprite> ret = obj.List_Sprite;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Sprite on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Label(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UILabel> ret = obj.List_Label;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Label on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Button(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIButton> ret = obj.List_Button;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Button on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Slider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISlider> ret = obj.List_Slider;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Slider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Grid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIGrid> ret = obj.List_Grid;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Grid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Toggle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIToggle> ret = obj.List_Toggle;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Toggle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Element(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIElement> ret = obj.List_Element;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Element on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Object(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.List_Object;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Object on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_ShaderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.Shader> ret = obj.List_ShaderObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_ShaderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Texture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UITexture> ret = obj.List_Texture;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Texture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Table(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UITable> ret = obj.List_Table;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Table on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_SpriteAnimation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISpriteAnimation> ret = obj.List_SpriteAnimation;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_SpriteAnimation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_UIWidget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIWidget> ret = obj.List_UIWidget;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_UIWidget on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_List_Collider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.Collider> ret = obj.List_Collider;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Collider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			object ret = obj.Data;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ModuleName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ModuleName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ModuleName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ItemName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ItemName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ItemName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Index = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Index on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Sprite(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISprite> arg0 = (System.Collections.Generic.List<UISprite>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UISprite>));
			obj.List_Sprite = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Sprite on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Label(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UILabel> arg0 = (System.Collections.Generic.List<UILabel>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UILabel>));
			obj.List_Label = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Label on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Button(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIButton> arg0 = (System.Collections.Generic.List<UIButton>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIButton>));
			obj.List_Button = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Button on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Slider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISlider> arg0 = (System.Collections.Generic.List<UISlider>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UISlider>));
			obj.List_Slider = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Slider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Grid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIGrid> arg0 = (System.Collections.Generic.List<UIGrid>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIGrid>));
			obj.List_Grid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Grid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Toggle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIToggle> arg0 = (System.Collections.Generic.List<UIToggle>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIToggle>));
			obj.List_Toggle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Toggle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Element(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIElement> arg0 = (System.Collections.Generic.List<UIElement>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIElement>));
			obj.List_Element = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Element on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Object(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.List_Object = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Object on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_ShaderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.Shader> arg0 = (System.Collections.Generic.List<UnityEngine.Shader>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Shader>));
			obj.List_ShaderObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_ShaderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Texture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UITexture> arg0 = (System.Collections.Generic.List<UITexture>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UITexture>));
			obj.List_Texture = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Texture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Table(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UITable> arg0 = (System.Collections.Generic.List<UITable>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UITable>));
			obj.List_Table = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Table on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_SpriteAnimation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UISpriteAnimation> arg0 = (System.Collections.Generic.List<UISpriteAnimation>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UISpriteAnimation>));
			obj.List_SpriteAnimation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_SpriteAnimation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_UIWidget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UIWidget> arg0 = (System.Collections.Generic.List<UIWidget>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UIWidget>));
			obj.List_UIWidget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_UIWidget on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_List_Collider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			System.Collections.Generic.List<UnityEngine.Collider> arg0 = (System.Collections.Generic.List<UnityEngine.Collider>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Collider>));
			obj.List_Collider = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index List_Collider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIItem obj = (UIItem)o;
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Data = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}
}

